# # # C O N F I G U R A T I O N # # #

# Default values are commented out. Use either ';' or '#' for commenting.

[general]

# Refresh rate of visualizer. Accepts only non-negative values.
framerate = 60

# 'autosens' will attempt to decrease sensitivity if the bars peak. 
# 1 = on, 0 = off
# new as of 0.6.0 autosens of low values (dynamic range)
autosens = 1

# Manual sensitivity in %. If autosens is enabled, this will only be 
# the initial value. 200 means double height. 
# Accepts only non-negative values.
sensitivity = 100

# The number of bars (0-200). 0 sets it to auto (fill up console).
# Bars' width and space between bars in number of characters.
bars = 0
bar_width = 4
bar_spacing = 1

# Lower and higher cutoff frequencies for lowest and highest bars
# the bandwidth of the visualizer.
# Note: there is a minimum total bandwidth of 43Mhz x number of bars.
# Cava will automatically increase the higher cutoff if a too low band 
# is specified.
lower_cutoff_freq = 50
higher_cutoff_freq = 10000

# Seconds with no input before cava goes to sleep mode. 
# Cava will not perform FFT or drawing and only check for input 
# once per second. Cava will wake up once input is detected. 0 = disable.
sleep_timer = 5

[input]

# Audio capturing method. 
# Possible methods are: 'pulse', 'alsa', 'fifo', 'sndio' or 'shmem'
# 
# Defaults to 'pulse', 'alsa' or 'fifo', in that order, 
# dependent on what support cava was built with.
#
# All input methods uses the same config variable 'source'
# to define where it should get the audio.
#
# For pulseaudio 'source' will be the source. Default: 'auto', 
# which uses the monitor source of the default sink (all pulseaudio 
# sinks(outputs) have 'monitor' sources(inputs) associated with them).
method = pulse
source = auto

[output]

# Output method. Can be 'ncurses', 'noncurses', 'raw', 'noritake' or 'sdl'.
# 'noncurses' uses a custom framebuffer technique and prints only changes
# from frame to frame in the terminal. 'ncurses' is default if supported.
method = ncurses

# Orientation of the visualization. Can be 'bottom', 'top', 'left' or 'right'.
# Default is 'bottom'. Other orientations are only supported on sdl and ncruses
# output. Note: many fonts have weird glyphs for 'top' and 'right' characters,
# which can make ncurses not look right.
orientation = bottom 

# Visual channels. Can be 'stereo' or 'mono'.
# 'stereo' mirrors both channels with low frequencies in center.
# 'mono' outputs left to right lowest to highest frequencies.
# 'mono_option' set mono to either take input from 'left', 'right' or 'average'.
# set 'reverse' to 1 to display frequencies the other way around.
channels = mono
mono_option = average
reverse = 0

# set label on bars on the x-axis. Can be 'frequency' or 'none'. Default: 'none'
# 'frequency' displays the lower cut off frequency of the bar above.
# Only supported on ncurses and noncurses output.
xaxis = none

[color]

# Colors can be one of seven predefined: black, blue, cyan, green, magenta, red,
# white, yellow. Or defined by hex code '#xxxxxx' (hex code must be within ''). 
# User defined colors requires a terminal that can change color definitions such
# as Gnome-terminal or rxvt. Default is to keep current terminal color.
background = default
foreground = default

# Gradient mode, only hex defined colors are supported, background must also 
# be defined in hex or remain commented out. 1 = on, 0 = off. You can define 
# as many as 8 different colors. They range from bottom to top of screen
gradient = 1
gradient_count = 8
gradient_color_1 = '#f3e39b'
gradient_color_2 = '#e1c611'
gradient_color_3 = '#d1ac17'
gradient_color_4 = '#c4971c'
gradient_color_5 = '#b37b22'
gradient_color_6 = '#ab6e25'
gradient_color_7 = '#a76627'
gradient_color_8 = '#dd6c29'

[smoothing]

# Disables or enables the so-called "Monstercat smoothing" with or without 
# "waves". Set to 0 to disable.
monstercat = 1
waves = 0

# Noise reduction, float 0 - 1. default 0.77.
# The raw visualization is very noisy, this factor adjusts the integral and 
# gravity filters to keep the signal smooth. 1 will be very slow and smooth, 
# 0 will be fast but noisy.
noise_reduction = 0.77

[eq]

# This one is tricky. You can have as much keys as you want.
# Remember to uncomment more then one key! More keys = more precision.
# Look at readme.md on github for further explanations and examples.
1 = 1 # bass
2 = 1
3 = 1 # midtone
4 = 1
5 = 1 # treble
